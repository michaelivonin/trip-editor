(window["webpackJsonptrip-editor"]=window["webpackJsonptrip-editor"]||[]).push([[0],[,,,,,,,,,,,,,function(e,t,n){e.exports=n(25)},,,,,function(e,t,n){},function(e,t,n){},function(e,t,n){},function(e,t,n){},,function(e,t,n){},,function(e,t,n){"use strict";n.r(t);var a=n(0),r=n.n(a),o=n(9),s=n.n(o),c=(n(18),n(2)),i=n(3),l=n(6),u=n(4),d=n(1),p=n(5),h=(n(19),n(20),function(e){function t(e){var n;return Object(c.a)(this,t),(n=Object(l.a)(this,Object(u.a)(t).call(this,e))).handleChange=n.handleChange.bind(Object(d.a)(n)),n.handleSubmit=n.handleSubmit.bind(Object(d.a)(n)),n}return Object(p.a)(t,e),Object(i.a)(t,[{key:"handleChange",value:function(e){this.props.onInputChange(e)}},{key:"handleSubmit",value:function(e){e.preventDefault(),this.props.onInputSubmit()}},{key:"render",value:function(){return r.a.createElement("form",{className:"App__form",onSubmit:this.handleSubmit},r.a.createElement("label",null,r.a.createElement("input",{className:this.props.className,type:"text",autoFocus:!0,placeholder:this.props.placeholder,value:this.props.value,onChange:this.handleChange})))}}]),t}(r.a.Component)),m=n(12),b=(n(21),n(7));function g(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})),n.push.apply(n,a)}return n}function f(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?g(n,!0).forEach(function(t){Object(m.a)(e,t,n[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):g(n).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))})}return e}var v=function(e){function t(e){var n;return Object(c.a)(this,t),(n=Object(l.a)(this,Object(u.a)(t).call(this,e))).handleMove=n.handleMove.bind(Object(d.a)(n)),n.handleRemove=n.handleRemove.bind(Object(d.a)(n)),n}return Object(p.a)(t,e),Object(i.a)(t,[{key:"handleMove",value:function(e){this.props.onPointMove(e)}},{key:"handleRemove",value:function(e){this.props.onButtonDelete(e)}},{key:"render",value:function(){var e=this;return r.a.createElement(b.List,{values:this.props.places,onChange:function(t){var n=t.oldIndex,a=t.newIndex;return e.handleMove({oldIndex:n,newIndex:a})},renderList:function(t){var n=t.children,a=t.props,o=t.isDragged;return r.a.createElement("ol",Object.assign({className:e.props.className},a,{style:{cursor:o?"grabbing":"inherit"}}),n)},renderItem:function(t){var n=t.value,a=t.props,o=t.isDragged,s=t.index;return r.a.createElement("li",Object.assign({className:"App__places-item"},a,{style:f({},a.style,{cursor:o?"grabbing":"grab"})}),r.a.createElement("div",{className:"App__value-wrapper"},r.a.createElement("div",null,n.address)," ",r.a.createElement("button",{className:"App__places-button",onClick:function(){return e.handleRemove(s)}},"\u2716")))}})}}]),t}(r.a.Component),O=(n(23),n(8)),j=function(e){function t(e){var n;return Object(c.a)(this,t),(n=Object(l.a)(this,Object(u.a)(t).call(this,e))).transfer=n.transfer.bind(Object(d.a)(n)),n.setNewBounds=n.setNewBounds.bind(Object(d.a)(n)),n.handleDrag=n.handleDrag.bind(Object(d.a)(n)),n}return Object(p.a)(t,e),Object(i.a)(t,[{key:"transfer",value:function(e){this.props.handleTransfer(e)}},{key:"setNewBounds",value:function(e){var t=e.geoObjects;1===t.getLength()&&e.setCenter(t.get(0).geometry.getCoordinates(),8,{duration:350}),t.getLength()>1&&e.setBounds(t.getBounds(),{checkZoomRange:!0,duration:350})}},{key:"handleDrag",value:function(e,t){this.props.onDragEnd(e,t)}},{key:"render",value:function(){var e=this,t=this.props.places;return r.a.createElement(O.d,{query:{apikey:"9fbf58eb-f5d4-47d2-9d6b-7507e2ecb7c9"}},r.a.createElement("div",{className:this.props.className},r.a.createElement(O.a,{className:"App__map",instanceRef:function(t){return e.map=t},onLoad:function(t){e.transfer(t),e.map.geoObjects.events.add(["add","dragend","remove"],function(){return e.setNewBounds(e.map)})},defaultState:{center:[55.75,37.57],zoom:9},modules:["geocode"]},!t.length||t.map(function(t,n){return r.a.createElement(O.b,{key:n,geometry:t.coordinates,modules:["geoObject.addon.balloon"],properties:{iconContent:n+1,balloonContent:t.address},options:{preset:"islands#blackStretchyIcon",draggable:!0},onDragEnd:function(t){return e.handleDrag(t,n)}})}),t.length>1?r.a.createElement(O.c,{geometry:t.map(function(e){return e.coordinates}),options:{balloonCloseButton:!1,strokeColor:"#000",strokeWidth:4,strokeOpacity:.5}}):null)))}}]),t}(r.a.Component),y=function(e){function t(e){var n;return Object(c.a)(this,t),(n=Object(l.a)(this,Object(u.a)(t).call(this,e))).handleChange=n.handleChange.bind(Object(d.a)(n)),n.handleSubmit=n.handleSubmit.bind(Object(d.a)(n)),n.handleMove=n.handleMove.bind(Object(d.a)(n)),n.handleRemove=n.handleRemove.bind(Object(d.a)(n)),n.transfer=n.transfer.bind(Object(d.a)(n)),n.handleDrag=n.handleDrag.bind(Object(d.a)(n)),n.state={places:[],point:"",ymaps:null},n}return Object(p.a)(t,e),Object(i.a)(t,[{key:"handleChange",value:function(e){this.setState({point:e.target.value})}},{key:"handleSubmit",value:function(){var e=this;if(this.state.point.length){var t=this.state.point;this.state.ymaps.geocode(t).then(function(t){if(!t.metaData.geocoder.found)return alert("Incorrect input! Repeat, please."),void e.setState({point:""});var n={address:e.state.point,coordinates:t.geoObjects.get(0).geometry.getCoordinates()};e.setState({places:e.state.places.concat(n),point:""})},function(e){return console.log(e.message)})}else alert("Enter address, please.")}},{key:"handleMove",value:function(e){var t=e.oldIndex,n=e.newIndex;this.setState(function(e){return{places:Object(b.arrayMove)(e.places,t,n)}})}},{key:"handleRemove",value:function(e){this.setState(function(t){return{places:"undefined"!==typeof e?Object(b.arrayRemove)(t.places,e):t.places}})}},{key:"transfer",value:function(e){this.setState({ymaps:e})}},{key:"handleDrag",value:function(e,t){var n=this,a=this.state.places,r=e.get("target").geometry.getCoordinates().map(function(e){return+e.toPrecision(8)});this.state.ymaps.geocode(r).then(function(e){var o={address:e.geoObjects.get(0).properties.getAll().text,coordinates:r};Object.assign(a[t],o),n.setState({places:a})},function(e){return console.log(e.message)})}},{key:"render",value:function(){return r.a.createElement("div",{className:"App"},r.a.createElement("div",{className:"App__column1"},r.a.createElement(h,{className:"App__input",placeholder:"Add new point",value:this.state.point,onInputChange:this.handleChange,onInputSubmit:this.handleSubmit}),!this.state.places.length||r.a.createElement(v,{className:"App__places",places:this.state.places,onPointMove:this.handleMove,onButtonDelete:this.handleRemove})),r.a.createElement("div",{className:"App__column2"},r.a.createElement(j,{className:"App__map-wrapper",places:this.state.places,handleTransfer:this.transfer,onDragEnd:this.handleDrag})))}}]),t}(r.a.Component);Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));s.a.render(r.a.createElement(y,null),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}],[[13,1,2]]]);
//# sourceMappingURL=main.bd6c0d2f.chunk.js.map